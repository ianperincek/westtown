---
import { getCollection } from "astro:content";

const blogPosts = await getCollection("blog", (post) => post.data.isFrontPage);

console.log("Number of blog posts for front page:", blogPosts.length);
---

<section id="blog-1347">
  <div class="cs-container">
    <div class="cs-content">
      <h2 class="cs-title">Featured Stories & News</h2>
      <p class="cs-text">
        Discover our latest posts, packed with expert advice, industry trends,
        and news that matter. Keep informed and inspired with our most recent
        blogs.
      </p>
    </div>
    <ul class="cs-card-group">
      {
        blogPosts.map((post) => {
          const formattedDate = new Date(post.data.date).toLocaleDateString(
            "en-US",
            {
              year: "numeric",
              month: "long",
              day: "numeric",
            }
          );

          return (
            <li class="cs-item">
              <a
                class="cs-link"
                href={`/blog/${post.slug}`}
                title={post.data.linkTitle}
              >
                <img
                  src={post.data.image.src}
                  alt={post.data.imageAlt}
                  loading="lazy"
                  decoding="async"
                  width="200"
                  class="cs-picture"
                />

                <div class="cs-item-text">
                  <p class="cs-h3">
                    {post.data.linkTitle}
                    <picture class="cs-icon-wrapper">
                      <img
                        class="cs-icon"
                        decoding="async"
                        src="/assets/svgs/agency-arrow-upper-right.svg"
                        alt="arrow"
                        width="413"
                        height="374"
                        aria-hidden="true"
                      />
                    </picture>
                  </p>
                  <div class="cs-info">
                    <span class="cs-date">
                      <img
                        class="cs-date-icon"
                        decoding="async"
                        src="/assets/svgs/agency-calendar.svg"
                        alt="calendar"
                        width="413"
                        height="374"
                        aria-hidden="true"
                        loading="lazy"
                      />
                      {formattedDate}
                    </span>
                    <span class="cs-category">{post.data.blogLabel}</span>
                  </div>
                </div>
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>
  <div class="cs-bubbles" aria-hidden="true"></div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const blogItems = document.querySelectorAll(".cs-card-group li");
  });
</script>

<style lang="scss">
  /*-- -------------------------- -->
<---        Recent Posts        -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #blog-1347 {
      padding: var(--sectionPadding);
      overflow: hidden;
      background: var(--secondaryBgLight);

      .cs-container {
        width: 100%;
        /* changes to 1280px on desktop */
        max-width: calc(700 / 16 * 1rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
      }

      .cs-title {
        max-width: 20ch;
        color: var(--bodyTextColor);
      }

      .cs-topper {
        color: var(--secondary);
      }

      .cs-card-group {
        width: 100%;
        margin: 0;
        padding: 0;
        display: grid;
        grid-template-columns: repeat(12, 1fr);
        gap: calc(16 / 16 * 1rem);
      }

      .cs-item {
        list-style: none;
        display: flex;
        flex-direction: column;
        grid-column: span 12;

        &:hover {
          .cs-h3,
          .cs-date,
          .cs-category {
            color: #fff;
          }

          .cs-item-text {
            background-color: var(--primary);
          }

          .cs-icon-wrapper {
            border-color: #fff;
          }

          .cs-icon,
          .cs-date-icon {
            filter: brightness(1000%) grayscale(1);
          }

          .cs-icon {
            transform: rotate(45deg);
          }

          .cs-category {
            &::before {
              background-color: #fff;
              opacity: 0.2;
            }
          }
        }
      }

      .cs-link {
        text-decoration: none;
        display: flex;
        flex-direction: column;
        /* if one card has more content then the others, the card will stretch to fill the parent container */
        flex-grow: 1;
        gap: calc(16 / 16 * 1rem);
      }

      .cs-picture {
        width: 100%;
        height: calc(320 / 16 * 1rem);
        margin: 0;
        border-radius: calc(24 / 16 * 1rem);
        display: block;
        position: relative;
        z-index: 1;
        overflow: hidden;
        object-fit: cover;

        img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
        }
      }

      .cs-item-text {
        padding: calc(20 / 16 * 1rem);
        background-color: #f7f7f7;
        border-radius: calc(24 / 16 * 1rem);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        /* makes the item text the element that grows to fill the container */
        flex-grow: 1;
        transition: background-color 0.3s;
      }

      .cs-h3 {
        /* 20px - 25px */
        font-size: clamp(1.25rem, 1.8vw, 1.5625rem);
        line-height: 1.2em;
        text-align: left;
        margin: 0;
        color: #1a1a1a;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: calc(16 / 16 * 1rem);
        transition: color 0.3s;
      }

      .cs-icon-wrapper {
        width: calc(48 / 16 * 1rem);
        height: calc(48 / 16 * 1rem);
        border: 1px solid #bababa;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        /* prevents the parent flexbox from shrinking the icon */
        flex-shrink: 0;
        transition: border-color 0.3s;
      }

      .cs-icon {
        width: auto;
        height: calc(12 / 16 * 1rem);
        transition:
          filter 0.3s,
          transform 0.3s;
      }

      .cs-info {
        margin: calc(16 / 16 * 1rem) 0 0;
        padding: calc(16 / 16 * 1rem) 0 0;
        border-top: 1px solid #e8e8e8;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .cs-date {
        font-size: calc(14 / 16 * 1rem);
        line-height: 1.5em;
        text-align: left;
        color: #1a1a1a;
        display: flex;
        align-items: center;
        gap: calc(8 / 16 * 1rem);
        transition: color 0.3s;
      }

      .cs-date-icon {
        width: auto;
        height: calc(24 / 16 * 1rem);
        transition: filter 0.3s;
      }

      .cs-category {
        font-size: calc(14 / 16 * 1rem);
        /* centers the text if the category bullet has to span multiple lines */
        text-align: center;
        padding: 0 calc(16 / 16 * 1rem);
        color: #1a1a1a;
        border-radius: calc(80 / 16 * 1rem);
        position: relative;
        z-index: 0;
        overflow: hidden;

        &::before {
          content: "";
          width: 100%;
          height: 100%;
          background: #e8e8e8;
          position: absolute;
          top: 0;
          left: 0;
          z-index: -1;
        }
      }

      .cs-bubbles {
        width: calc(321 / 16 * 1rem);
        height: calc(423 / 16 * 1rem);
        display: none;
        position: absolute;
        top: calc(1063 / 16 * 1rem);
        right: calc(-140 / 16 * 1rem);
        z-index: -1;

        &:before {
          /* white border bubble */
          content: "";
          width: calc(264 / 16 * 1rem);
          height: calc(264 / 16 * 1rem);
          background: transparent;
          opacity: 1;
          border: 1px solid #1a1a1a;
          border-radius: 50%;
          display: block;
          position: absolute;
          top: 0;
          right: 0;
          animation-name: floatAnimation;
          animation-duration: 5s;
          animation-timing-function: ease-in-out;
          animation-iteration-count: infinite;
          animation-fill-mode: forwards;
        }

        &:after {
          /* orange bubble */
          content: "";
          width: calc(264 / 16 * 1rem);
          height: calc(264 / 16 * 1rem);
          background: var(--primary);
          opacity: 0.1;
          border-radius: 50%;
          display: block;
          position: absolute;
          bottom: 0;
          left: 0;
          z-index: -1;
          animation-name: floatAnimation2;
          animation-duration: 14s;
          animation-timing-function: ease-in-out;
          animation-iteration-count: infinite;
          animation-fill-mode: forwards;
        }
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #blog-1347 {
      .cs-bubbles {
        display: block;
      }
    }
  }

  /* Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #blog-1347 {
      .cs-container {
        max-width: calc(1280 / 16 * 1rem);
      }

      .cs-item {
        grid-column: span 4;
      }

      .cs-bubbles {
        top: calc(281 / 16 * 1rem);
      }
    }
  }

  /* Large Desktop - 1300px */
  @media only screen and (min-width: 81.25rem) {
    #blog-1347 {
      .cs-bubbles {
        margin-right: calc(-990 / 16 * 1rem);
        right: 50%;
      }
    }
  }

  /* Dark Mode */
  @media only screen and (min-width: 0rem) {
    body.dark-mode {
      #blog-1347 {
        .cs-topper {
          color: var(--primaryLight);
        }
        .cs-title,
        .cs-text,
        .cs-h3,
        .cs-date,
        .cs-category {
          color: var(--bodyTextColorWhite);
        }

        .cs-text,
        .cs-date,
        .cs-category {
          opacity: 0.8;
        }

        .cs-item-text {
          background-color: var(--medium);
        }

        .cs-category {
          &::before {
            background-color: var(--accent);
          }
        }
      }
    }
  }
</style>
